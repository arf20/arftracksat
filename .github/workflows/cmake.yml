name: CMake

on: [ push, pull_request ]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: sudo apt install nlohmann-json3-dev libcurl4-openssl-dev libcurlpp-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        mkdir build
        cd build
        cmake ..

    - name: Build
      # Build your program with the given configuration
      run: |
        cd build
        make -j4
      
    - name: Make deb package
      run: |
        chmod +x makedeb.sh
        ./makedeb.sh 0.9-1
      
    - name: Upload deb package artifact
      uses: actions/upload-artifact@v2
      with:
        name: arftracksat_0.9-1.deb
        path: arftracksat_0.9-1.deb
